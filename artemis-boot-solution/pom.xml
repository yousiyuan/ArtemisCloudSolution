<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.lnson.artemis</groupId>
    <artifactId>artemis-boot-solution</artifactId>
    <version>1.0-SNAPSHOT</version>
    <modules>
        <module>artemis-common</module>
        <module>artemis-dao</module>
        <module>artemis-entity</module>
        <module>artemis-rabbit-service</module>
        <module>artemis-rabbit-service-impl</module>
        <module>artemis-service</module>
        <module>artemis-service-impl</module>
        <module>artemis-service-launch-server</module>
        <module>artemis-service-monitor-server</module>
        <module>artemis-service-regist-center</module>
        <module>artemis-unified-config-server</module>
        <module>artemis-unified-config-server-test</module>
        <module>artemis-unified-gateway-server</module>
        <module>artemis-web-manage</module>
    </modules>

    <packaging>pom</packaging>

    <properties>
        <java.version>1.8</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.build.jdkVersion>1.8</project.build.jdkVersion>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>

        <artemis-common.version>1.0-SNAPSHOT</artemis-common.version>
        <artemis-dao.version>1.0-SNAPSHOT</artemis-dao.version>
        <artemis-entity.version>1.0-SNAPSHOT</artemis-entity.version>
        <artemis-rabbit-service.version>1.0-SNAPSHOT</artemis-rabbit-service.version>
        <artemis-rabbit-service-impl.version>1.0-SNAPSHOT</artemis-rabbit-service-impl.version>
        <artemis-service.version>1.0-SNAPSHOT</artemis-service.version>
        <artemis-service-impl.version>1.0-SNAPSHOT</artemis-service-impl.version>
        <artemis-service-launch-server.version>1.0-SNAPSHOT</artemis-service-launch-server.version>
        <artemis-service-monitor-server.version>1.0-SNAPSHOT</artemis-service-monitor-server.version>
        <artemis-service-regist-center.version>1.0-SNAPSHOT</artemis-service-regist-center.version>
        <artemis-unified-config-server.version>1.0-SNAPSHOT</artemis-unified-config-server.version>
        <artemis-unified-config-server-test.version>1.0-SNAPSHOT</artemis-unified-config-server-test.version>
        <artemis-unified-gateway-server.version>1.0-SNAPSHOT</artemis-unified-gateway-server.version>
        <artemis-web-manage.version>1.0-SNAPSHOT</artemis-web-manage.version>

        <spring-cloud-dependencies.version>Greenwich.SR2</spring-cloud-dependencies.version>
        <spring-boot-dependencies.version>2.1.7.RELEASE</spring-boot-dependencies.version>
        <mybatis-spring-boot-starter.version>1.3.1</mybatis-spring-boot-starter.version>
        <mapper-spring-boot-starter.version>1.1.4</mapper-spring-boot-starter.version>
        <pagehelper-spring-boot-starter.version>1.2.10</pagehelper-spring-boot-starter.version>
        <druid-spring-boot-starter.version>1.1.9</druid-spring-boot-starter.version>
        <mysql.version>8.0.28</mysql.version>
        <ojdbc6.version>6</ojdbc6.version>
        <log4j.version>1.3.8.RELEASE</log4j.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <artifactId>artemis-common</artifactId>
                <groupId>org.lnson.artemis</groupId>
                <version>${artemis-common.version}</version>
            </dependency>
            <dependency>
                <groupId>org.lnson.artemis</groupId>
                <artifactId>artemis-dao</artifactId>
                <version>${artemis-dao.version}</version>
            </dependency>
            <dependency>
                <groupId>org.lnson.artemis</groupId>
                <artifactId>artemis-entity</artifactId>
                <version>${artemis-entity.version}</version>
            </dependency>
            <dependency>
                <groupId>org.lnson.artemis</groupId>
                <artifactId>artemis-rabbit-service</artifactId>
                <version>${artemis-rabbit-service.version}</version>
            </dependency>
            <dependency>
                <groupId>org.lnson.artemis</groupId>
                <artifactId>artemis-rabbit-service-impl</artifactId>
                <version>${artemis-rabbit-service-impl.version}</version>
            </dependency>
            <dependency>
                <groupId>org.lnson.artemis</groupId>
                <artifactId>artemis-service</artifactId>
                <version>${artemis-service.version}</version>
            </dependency>
            <dependency>
                <groupId>org.lnson.artemis</groupId>
                <artifactId>artemis-service-impl</artifactId>
                <version>${artemis-service-impl.version}</version>
            </dependency>

            <!-- spring cloud 依赖项 引入 -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud-dependencies.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- spring boot 依赖项 引入 -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot-dependencies.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- mybatis 相关依赖 引入 -->
            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${mybatis-spring-boot-starter.version}</version>
            </dependency>
            <dependency>
                <groupId>tk.mybatis</groupId>
                <artifactId>mapper-spring-boot-starter</artifactId>
                <version>${mapper-spring-boot-starter.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.pagehelper</groupId>
                <artifactId>pagehelper-spring-boot-starter</artifactId>
                <version>${pagehelper-spring-boot-starter.version}</version>
            </dependency>
            <!-- druid数据源 -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>${druid-spring-boot-starter.version}</version>
            </dependency>
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql.version}</version>
            </dependency>
            <!-- oracle驱动 -->
            <dependency>
                <groupId>com.oracle</groupId>
                <artifactId>ojdbc6</artifactId>
                <version>${ojdbc6.version}</version>
            </dependency>
            <!-- 日志 -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-log4j</artifactId>
                <version>${log4j.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <!--指定maven编译的jdk版本-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.2</version>
                <configuration>
                    <encoding>${project.build.sourceEncoding}</encoding>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                    <compilerArguments>
                        <verbose/>
                        <bootclasspath>${java.home}/lib/rt.jar</bootclasspath>
                    </compilerArguments>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.0.2</version>
            </plugin>
        </plugins>
        <pluginManagement>
            <!-- 一定要按需引用啊，springboot打包这部分也是一个大坑 -->
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.1.0</version>
                    <configuration>
                        <encoding>${project.build.sourceEncoding}</encoding>
                        <delimiters>
                            <delimit>@</delimit>
                        </delimiters>
                    </configuration>
                </plugin>
                <!--用于maven构建时执行一个应用的单元测试-->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.18</version>
                    <configuration>
                        <!-- 此值为true则忽略测试中的构建错误 -->
                        <testFailureIgnore>false</testFailureIgnore>
                        <!-- 此值为true则不执行单元测试 -->
                        <skip>true</skip>
                    </configuration>
                </plugin>
                <!-- 处理依赖关系 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>3.0.1</version>
                    <executions>
                        <execution>
                            <id>copy</id>
                            <phase>package</phase>
                            <goals>
                                <goal>copy</goal>
                            </goals>
                            <configuration>
                                <artifactItems>
                                    <!--
                                    <artifactItem>
                                        <groupId>junit</groupId>
                                        <artifactId>junit</artifactId>
                                        <version>4.12</version>
                                    </artifactItem>
                                    -->
                                </artifactItems>
                                <!-- outputDirectory：用来指定拷出后Libraries的存放地 -->
                                <outputDirectory>${project.build.directory}/lib/</outputDirectory>
                            </configuration>
                        </execution>
                    </executions>
                    <configuration>
                        <includeScope>compile</includeScope>
                    </configuration>
                </plugin>
                <!--生成sources源码包的插件-->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>2.2.1</version>
                    <executions>
                        <execution>
                            <id>attach-sources</id>
                            <goals>
                                <goal>jar-no-fork</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <!--生成javadoc文档包的插件-->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>2.9.1</version>
                    <configuration>
                        <encoding>${project.build.sourceEncoding}</encoding>
                        <docencoding>${project.build.sourceEncoding}</docencoding>
                    </configuration>
                    <executions>
                        <execution>
                            <id>attach-javadocs</id>
                            <goals>
                                <goal>jar</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <!--自动完成签名-->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-gpg-plugin</artifactId>
                    <version>1.6</version>
                    <executions>
                        <execution>
                            <id>sign-artifacts</id>
                            <phase>verify</phase>
                            <goals>
                                <goal>sign</goal>
                            </goals>
                        </execution>
                    </executions>
                    <!-- 需要执行该插件时，请删除配置节点configuration或者修改skip为false -->
                    <configuration>
                        <skip>true</skip>
                    </configuration>
                </plugin>
                <!-- 生成站点插件 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>3.7</version>
                    <dependencies>
                        <dependency>
                            <groupId>org.apache.maven.doxia</groupId>
                            <artifactId>doxia-site-renderer</artifactId>
                            <version>1.8</version>
                        </dependency>
                    </dependencies>
                    <!--国际化定义当地语言 -->
                    <configuration>
                        <locales>zh_CN</locales>
                    </configuration>
                </plugin>
                <!-- springboot工程打包插件 -->
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>2.1.7.RELEASE</version>
                    <configuration>
                        <!-- 是否打出可执行的jar包(仅支持Linux格式) -->
                        <executable>true</executable>
                        <!-- 插件方式指定打包类型以及启动类 -->
                        <mainClass>org.springframework.boot.loader.JarLauncher</mainClass>
                        <layout>JAR</layout>
                        <!--
                        <mainClass>org.springframework.boot.loader.warLauncher</mainClass>
                        <layout>WAR</layout>
                        -->
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <!-- 默认goal。在mvn package之后，再次打包可执行的jar/war，同时保留mvn package生成的jar/war为.origin -->
                                <goal>repackage</goal>
                                <!-- 运行Spring Boot工程
                                <goal>run</goal>
                                     在mvn integration-test阶段，进行Spring Boot应用生命周期的管理
                                <goal>start</goal>
                                     在mvn integration-test阶段，进行Spring Boot应用生命周期的管理
                                <goal>stop</goal>
                                -->
                                <!-- 生成Actuator使用的构建信息文件build-info.properties -->
                                <goal>build-info</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <!--报告-->
    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>2.10.4</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>2.9</version>
            </plugin>
        </plugins>
    </reporting>

    <!-- 由于使用了私服nexus，需要设置deploy的地址 -->
    <distributionManagement>
        <repository>
            <id>nexus-releases</id>
            <name>nexus user release resp</name>
            <url>http://192.168.1.102:8080/nexus/content/repositories/releases/</url>
        </repository>
        <snapshotRepository>
            <id>nexus-snapshots</id>
            <name>nexus user snapshot</name>
            <url>http://192.168.1.102:8080/nexus/content/repositories/snapshots/</url>
        </snapshotRepository>
    </distributionManagement>
</project>